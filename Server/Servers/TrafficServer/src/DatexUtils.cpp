/*
Copyright (c) 1999 - 2010, Vodafone Group Services Ltd
All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:

    * Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
    * Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
    * Neither the name of the Vodafone Group Services Ltd nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

#include "DatexUtils.h"

map<MC2String, TrafficDataTypes::disturbanceType> 
DatexUtils::c_typeMap;

map<MC2String, TrafficDataTypes::phrase> 
DatexUtils::c_phraseMap;

map<TrafficDataTypes::phrase, TrafficDataTypes::severity> 
DatexUtils::c_phraseToSeverity;

bool DatexUtils::initializeTables()
{
   {
      typedef std::pair<const char*, TrafficDataTypes::phrase> pp;
      const pp phrase_map[] = { 
#if 1
         pp("ABL", TrafficDataTypes::ABL),
         pp("ABX", TrafficDataTypes::ABX),
         pp("ACA", TrafficDataTypes::ACA),
         pp("ACB", TrafficDataTypes::ACB),
         pp("ACD", TrafficDataTypes::ACD),
         pp("ACE", TrafficDataTypes::ACE),
         pp("ACF", TrafficDataTypes::ACF),
         pp("ACH", TrafficDataTypes::ACH),
         pp("ACI", TrafficDataTypes::ACI),
         pp("ACL", TrafficDataTypes::ACL),
         pp("ACM", TrafficDataTypes::ACM),
         pp("ACS", TrafficDataTypes::ACS),
         pp("ACW", TrafficDataTypes::ACW),
         pp("ACX", TrafficDataTypes::ACX),
         pp("ACZ", TrafficDataTypes::ACZ),
         pp("AIC", TrafficDataTypes::AIC),
         pp("AIR", TrafficDataTypes::AIR),
         pp("AJA", TrafficDataTypes::AJA),
         pp("AJC", TrafficDataTypes::AJC),
         pp("AJT", TrafficDataTypes::AJT),
         pp("ALA", TrafficDataTypes::ALA),
         pp("ALC", TrafficDataTypes::ALC),
         pp("ALL", TrafficDataTypes::ALL),
         pp("ALR", TrafficDataTypes::ALR),
         pp("ANH", TrafficDataTypes::ANH),
         pp("ANL", TrafficDataTypes::ANL),
         pp("ANM", TrafficDataTypes::ANM),
         pp("AOI", TrafficDataTypes::AOI),
         pp("AOL", TrafficDataTypes::AOL),
         pp("AOV", TrafficDataTypes::AOV),
         pp("APF", TrafficDataTypes::APF),
         pp("APT", TrafficDataTypes::APT),
         pp("AQD", TrafficDataTypes::AQD),
         pp("ASP", TrafficDataTypes::ASP),
         pp("ATR", TrafficDataTypes::ATR),
         pp("AVL", TrafficDataTypes::AVL),
         pp("AVS", TrafficDataTypes::AVS),
         pp("BCL", TrafficDataTypes::BCL),
         pp("BDB", TrafficDataTypes::BDB),
         pp("BDX", TrafficDataTypes::BDX),
         pp("BKD", TrafficDataTypes::BKD),
         pp("BLI", TrafficDataTypes::BLI),
         pp("BLO", TrafficDataTypes::BLO),
         pp("BLS", TrafficDataTypes::BLS),
         pp("BRB", TrafficDataTypes::BRB),
         pp("BRC", TrafficDataTypes::BRC),
         pp("BRP", TrafficDataTypes::BRP),
         pp("BSI", TrafficDataTypes::BSI),
         pp("BUN", TrafficDataTypes::BUN),
         pp("BWM", TrafficDataTypes::BWM),
         pp("CAA", TrafficDataTypes::CAA),
         pp("CAC", TrafficDataTypes::CAC),
         pp("CAL", TrafficDataTypes::CAL),
         pp("CBW", TrafficDataTypes::CBW),
         pp("CCB", TrafficDataTypes::CCB),
         pp("CCC", TrafficDataTypes::CCC),
         pp("CHI", TrafficDataTypes::CHI),
         pp("CLE", TrafficDataTypes::CLE),
         pp("CLW", TrafficDataTypes::CLW),
         pp("CON", TrafficDataTypes::CON),
         pp("COO", TrafficDataTypes::COO),
         pp("COW", TrafficDataTypes::COW),
         pp("CPW", TrafficDataTypes::CPW),
         pp("CRC", TrafficDataTypes::CRC),
         pp("CRX", TrafficDataTypes::CRX),
         pp("CTR", TrafficDataTypes::CTR),
         pp("CTT", TrafficDataTypes::CTT),
         pp("CTX", TrafficDataTypes::CTX),
         pp("CV1", TrafficDataTypes::CV1),
         pp("CV3", TrafficDataTypes::CV3),
         pp("CVX", TrafficDataTypes::CVX),
         pp("CVY", TrafficDataTypes::CVY),
         pp("CWC", TrafficDataTypes::CWC),
         pp("CYC", TrafficDataTypes::CYC),
         pp("DCD", TrafficDataTypes::DCD),
         pp("DCE", TrafficDataTypes::DCE),
         pp("DCL", TrafficDataTypes::DCL),
         pp("DCN", TrafficDataTypes::DCN),
         pp("DCZ", TrafficDataTypes::DCZ),
         pp("DEI", TrafficDataTypes::DEI),
         pp("DEU", TrafficDataTypes::DEU),
         pp("DEX", TrafficDataTypes::DEX),
         pp("DIP", TrafficDataTypes::DIP),
         pp("DLL", TrafficDataTypes::DLL),
         pp("DLY", TrafficDataTypes::DLY),
         pp("DO",  TrafficDataTypes::DO),
         pp("DPN", TrafficDataTypes::DPN),
         pp("DUD", TrafficDataTypes::DUD),
         pp("DVL", TrafficDataTypes::DVL),
         pp("DXX", TrafficDataTypes::DXX),
         pp("EAM", TrafficDataTypes::EAM),
         pp("EBA", TrafficDataTypes::EBA),
         pp("EBF", TrafficDataTypes::EBF),
         pp("EBG", TrafficDataTypes::EBG),
         pp("EBT", TrafficDataTypes::EBT),
         pp("ECL", TrafficDataTypes::ECL),
         pp("ECM", TrafficDataTypes::ECM),
         pp("ECR", TrafficDataTypes::ECR),
         pp("ECY", TrafficDataTypes::ECY),
         pp("EFA", TrafficDataTypes::EFA),
         pp("EFM", TrafficDataTypes::EFM),
         pp("EFR", TrafficDataTypes::EFR),
         pp("EGT", TrafficDataTypes::EGT),
         pp("EHL", TrafficDataTypes::EHL),
         pp("EIS", TrafficDataTypes::EIS),
         pp("EMH", TrafficDataTypes::EMH),
         pp("EMR", TrafficDataTypes::EMR),
         pp("EMT", TrafficDataTypes::EMT),
         pp("EMV", TrafficDataTypes::EMV),
         pp("EMX", TrafficDataTypes::EMX),
         pp("EPD", TrafficDataTypes::EPD),
         pp("EPR", TrafficDataTypes::EPR),
         pp("EQD", TrafficDataTypes::EQD),
         pp("ERA", TrafficDataTypes::ERA),
         pp("ESA", TrafficDataTypes::ESA),
         pp("ESH", TrafficDataTypes::ESH),
         pp("ESI", TrafficDataTypes::ESI),
         pp("ESJ", TrafficDataTypes::ESJ),
         pp("ESM", TrafficDataTypes::ESM),
         pp("ESO", TrafficDataTypes::ESO),
         pp("ESP", TrafficDataTypes::ESP),
         pp("ESS", TrafficDataTypes::ESS),
         pp("EST", TrafficDataTypes::EST),
         pp("ESX", TrafficDataTypes::ESX),
         pp("ESY", TrafficDataTypes::ESY),
         pp("ETN", TrafficDataTypes::ETN),
         pp("ETO", TrafficDataTypes::ETO),
         pp("ETT", TrafficDataTypes::ETT),
         pp("EVA", TrafficDataTypes::EVA),
         pp("EVC", TrafficDataTypes::EVC),
         pp("EVD", TrafficDataTypes::EVD),
         pp("EVF", TrafficDataTypes::EVF),
         pp("EVM", TrafficDataTypes::EVM),
         pp("EVP", TrafficDataTypes::EVP),
         pp("EVX", TrafficDataTypes::EVX),
         pp("EWS", TrafficDataTypes::EWS),
         pp("EWT", TrafficDataTypes::EWT),
         pp("EXB", TrafficDataTypes::EXB),
         pp("EXC", TrafficDataTypes::EXC),
         pp("EXS", TrafficDataTypes::EXS),
         pp("FFX", TrafficDataTypes::FFX),
         pp("FIG", TrafficDataTypes::FIG),
         pp("FIR", TrafficDataTypes::FIR),
         pp("FLD", TrafficDataTypes::FLD),
         pp("FLF", TrafficDataTypes::FLF),
         pp("FLO", TrafficDataTypes::FLO),
         pp("FLT", TrafficDataTypes::FLT),
         pp("FOD", TrafficDataTypes::FOD),
         pp("FOF", TrafficDataTypes::FOF),
         pp("FOG", TrafficDataTypes::FOG),
         pp("FOP", TrafficDataTypes::FOP),
         pp("FOX", TrafficDataTypes::FOX),
         pp("FPC", TrafficDataTypes::FPC),
         pp("FRH", TrafficDataTypes::FRH),
         pp("FRO", TrafficDataTypes::FRO),
         pp("FSN", TrafficDataTypes::FSN),
         pp("FUE", TrafficDataTypes::FUE),
         pp("FUN", TrafficDataTypes::FUN),
         pp("GAL", TrafficDataTypes::GAL),
         pp("GAS", TrafficDataTypes::GAS),
         pp("GMW", TrafficDataTypes::GMW),
         pp("GP",  TrafficDataTypes::GP),
         pp("GUN", TrafficDataTypes::GUN),
         pp("HAD", TrafficDataTypes::HAD),
         pp("HAI", TrafficDataTypes::HAI),
         pp("HAX", TrafficDataTypes::HAX),
         pp("HAZ", TrafficDataTypes::HAZ),
         pp("HBD", TrafficDataTypes::HBD),
         pp("HLL", TrafficDataTypes::HLL),
         pp("HLT", TrafficDataTypes::HLT),
         pp("HSC", TrafficDataTypes::HSC),
         pp("HUR", TrafficDataTypes::HUR),
         pp("IAV", TrafficDataTypes::IAV),
         pp("IBU", TrafficDataTypes::IBU),
         pp("ICP", TrafficDataTypes::ICP),
         pp("IMA", TrafficDataTypes::IMA),
         pp("IMP", TrafficDataTypes::IMP),
         pp("INS", TrafficDataTypes::INS),
         pp("IVD", TrafficDataTypes::IVD),
         pp("LAP", TrafficDataTypes::LAP),
         pp("LB1", TrafficDataTypes::LB1),
         pp("LB2", TrafficDataTypes::LB2),
         pp("LB3", TrafficDataTypes::LB3),
         pp("LBA", TrafficDataTypes::LBA),
         pp("LBB", TrafficDataTypes::LBB),
         pp("LBC", TrafficDataTypes::LBC),
         pp("LBD", TrafficDataTypes::LBD),
         pp("LBE", TrafficDataTypes::LBE),
         pp("LBH", TrafficDataTypes::LBH),
         pp("LBK", TrafficDataTypes::LBK),
         pp("LBL", TrafficDataTypes::LBL),
         pp("LBP", TrafficDataTypes::LBP),
         pp("LBR", TrafficDataTypes::LBR),
         pp("LBT", TrafficDataTypes::LBT),
         pp("LBV", TrafficDataTypes::LBV),
         pp("LBX", TrafficDataTypes::LBX),
         pp("LC1", TrafficDataTypes::LC1),
         pp("LC2", TrafficDataTypes::LC2),
         pp("LC3", TrafficDataTypes::LC3),
         pp("LCA", TrafficDataTypes::LCA),
         pp("LCB", TrafficDataTypes::LCB),
         pp("LCC", TrafficDataTypes::LCC),
         pp("LCD", TrafficDataTypes::LCD),
         pp("LCE", TrafficDataTypes::LCE),
         pp("LCF", TrafficDataTypes::LCF),
         pp("LCH", TrafficDataTypes::LCH),
         pp("LCI", TrafficDataTypes::LCI),
         pp("LCL", TrafficDataTypes::LCL),
         pp("LCP", TrafficDataTypes::LCP),
         pp("LCR", TrafficDataTypes::LCR),
         pp("LCS", TrafficDataTypes::LCS),
         pp("LCT", TrafficDataTypes::LCT),
         pp("LCV", TrafficDataTypes::LCV),
         pp("LCW", TrafficDataTypes::LCW),
         pp("LLB", TrafficDataTypes::LLB),
         pp("LLC", TrafficDataTypes::LLC),
         pp("LLD", TrafficDataTypes::LLD),
         pp("LLL", TrafficDataTypes::LLL),
         pp("LLT", TrafficDataTypes::LLT),
         pp("LO1", TrafficDataTypes::LO1),
         pp("LO2", TrafficDataTypes::LO2),
         pp("LO3", TrafficDataTypes::LO3),
         pp("LPB", TrafficDataTypes::LPB),
         pp("LPC", TrafficDataTypes::LPC),
         pp("LPX", TrafficDataTypes::LPX),
         pp("LRR", TrafficDataTypes::LRR),
         pp("LRS", TrafficDataTypes::LRS),
         pp("LRX", TrafficDataTypes::LRX),
         pp("LS1", TrafficDataTypes::LS1),
         pp("LS2", TrafficDataTypes::LS2),
         pp("LS3", TrafficDataTypes::LS3),
         pp("LS4", TrafficDataTypes::LS4),
         pp("LS5", TrafficDataTypes::LS5),
         pp("LS6", TrafficDataTypes::LS6),
         pp("LSG", TrafficDataTypes::LSG),
         pp("LSL", TrafficDataTypes::LSL),
         pp("LSO", TrafficDataTypes::LSO),
         pp("LSR", TrafficDataTypes::LSR),
         pp("LTH", TrafficDataTypes::LTH),
         pp("LTM", TrafficDataTypes::LTM),
         pp("LVB", TrafficDataTypes::LVB),
         pp("MAR", TrafficDataTypes::MAR),
         pp("MHR", TrafficDataTypes::MHR),
         pp("MIL", TrafficDataTypes::MIL),
         pp("MKT", TrafficDataTypes::MKT),
         pp("MSR", TrafficDataTypes::MSR),
         pp("MUD", TrafficDataTypes::MUD),
         pp("MVL", TrafficDataTypes::MVL),
         pp("NAR", TrafficDataTypes::NAR),
         pp("NCR", TrafficDataTypes::NCR),
         pp("NDT", TrafficDataTypes::NDT),
         pp("NIA", TrafficDataTypes::NIA),
         pp("NLS", TrafficDataTypes::NLS),
         pp("NML", TrafficDataTypes::NML),
         pp("NOO", TrafficDataTypes::NOO),
         pp("NRL", TrafficDataTypes::NRL),
         pp("NUL", TrafficDataTypes::NUL),
         pp("OBR", TrafficDataTypes::OBR),
         pp("OCC", TrafficDataTypes::OCC),
         pp("OCL", TrafficDataTypes::OCL),
         pp("OHV", TrafficDataTypes::OHV),
         pp("OHW", TrafficDataTypes::OHW),
         pp("OHX", TrafficDataTypes::OHX),
         pp("OIL", TrafficDataTypes::OIL),
         pp("OMV", TrafficDataTypes::OMV),
         pp("OPE", TrafficDataTypes::OPE),
         pp("OSI", TrafficDataTypes::OSI),
         pp("OWW", TrafficDataTypes::OWW),
         pp("PAC", TrafficDataTypes::PAC),
         pp("PCB", TrafficDataTypes::PCB),
         pp("PCC", TrafficDataTypes::PCC),
         pp("PEO", TrafficDataTypes::PEO),
         pp("PFN", TrafficDataTypes::PFN),
         pp("PFS", TrafficDataTypes::PFS),
         pp("PIX", TrafficDataTypes::PIX),
         pp("PKO", TrafficDataTypes::PKO),
         pp("PKT", TrafficDataTypes::PKT),
         pp("PMN", TrafficDataTypes::PMN),
         pp("PMS", TrafficDataTypes::PMS),
         pp("PRA", TrafficDataTypes::PRA),
         pp("PRC", TrafficDataTypes::PRC),
         pp("PRI", TrafficDataTypes::PRI),
         pp("PRL", TrafficDataTypes::PRL),
         pp("PRN", TrafficDataTypes::PRN),
         pp("PRO", TrafficDataTypes::PRO),
         pp("PRS", TrafficDataTypes::PRS),
         pp("PRV", TrafficDataTypes::PRV),
         pp("PRX", TrafficDataTypes::PRX),
         pp("PSA", TrafficDataTypes::PSA),
         pp("PSL", TrafficDataTypes::PSL),
         pp("PSN", TrafficDataTypes::PSN),
         pp("PSR", TrafficDataTypes::PSR),
         pp("PSS", TrafficDataTypes::PSS),
         pp("PTB", TrafficDataTypes::PTB),
         pp("PTC", TrafficDataTypes::PTC),
         pp("PTH", TrafficDataTypes::PTH),
         pp("PTN", TrafficDataTypes::PTN),
         pp("PTS", TrafficDataTypes::PTS),
         pp("RAC", TrafficDataTypes::RAC),
         pp("RAD", TrafficDataTypes::RAD),
         pp("RAF", TrafficDataTypes::RAF),
         pp("RAH", TrafficDataTypes::RAH),
         pp("RAI", TrafficDataTypes::RAI),
         pp("RBA", TrafficDataTypes::RBA),
         pp("RBD", TrafficDataTypes::RBD),
         pp("RBE", TrafficDataTypes::RBE),
         pp("RBI", TrafficDataTypes::RBI),
         pp("RBL", TrafficDataTypes::RBL),
         pp("RBM", TrafficDataTypes::RBM),
         pp("RBX", TrafficDataTypes::RBX),
         pp("RC2", TrafficDataTypes::RC2),
         pp("RCA", TrafficDataTypes::RCA),
         pp("RCB", TrafficDataTypes::RCB),
         pp("RCD", TrafficDataTypes::RCD),
         pp("RCE", TrafficDataTypes::RCE),
         pp("RCI", TrafficDataTypes::RCI),
         pp("RCL", TrafficDataTypes::RCL),
         pp("RCP", TrafficDataTypes::RCP),
         pp("RCR", TrafficDataTypes::RCR),
         pp("RCT", TrafficDataTypes::RCT),
         pp("RCW", TrafficDataTypes::RCW),
         pp("RCX", TrafficDataTypes::RCX),
         pp("RDW", TrafficDataTypes::RDW),
         pp("REB", TrafficDataTypes::REB),
         pp("REC", TrafficDataTypes::REC),
         pp("REL", TrafficDataTypes::REL),
         pp("REO", TrafficDataTypes::REO),
         pp("RET", TrafficDataTypes::RET),
         pp("REW", TrafficDataTypes::REW),
         pp("REX", TrafficDataTypes::REX),
         pp("RIC", TrafficDataTypes::RIC),
         pp("RIN", TrafficDataTypes::RIN),
         pp("RIS", TrafficDataTypes::RIS),
         pp("RLS", TrafficDataTypes::RLS),
         pp("RLU", TrafficDataTypes::RLU),
         pp("RMD", TrafficDataTypes::RMD),
         pp("RMK", TrafficDataTypes::RMK),
         pp("RMM", TrafficDataTypes::RMM),
         pp("RMP", TrafficDataTypes::RMP),
         pp("RMV", TrafficDataTypes::RMV),
         pp("RMW", TrafficDataTypes::RMW),
         pp("RMX", TrafficDataTypes::RMX),
         pp("RNL", TrafficDataTypes::RNL),
         pp("RNW", TrafficDataTypes::RNW),
         pp("ROA", TrafficDataTypes::ROA),
         pp("ROC", TrafficDataTypes::ROC),
         pp("RPB", TrafficDataTypes::RPB),
         pp("RPC", TrafficDataTypes::RPC),
         pp("RRI", TrafficDataTypes::RRI),
         pp("RRU", TrafficDataTypes::RRU),
         pp("RRW", TrafficDataTypes::RRW),
         pp("RSB", TrafficDataTypes::RSB),
         pp("RSI", TrafficDataTypes::RSI),
         pp("RSL", TrafficDataTypes::RSL),
         pp("RSN", TrafficDataTypes::RSN),
         pp("RSO", TrafficDataTypes::RSO),
         pp("RSR", TrafficDataTypes::RSR),
         pp("RTO", TrafficDataTypes::RTO),
         pp("RWC", TrafficDataTypes::RWC),
         pp("RWI", TrafficDataTypes::RWI),
         pp("RWK", TrafficDataTypes::RWK),
         pp("RWL", TrafficDataTypes::RWL),
         pp("RWM", TrafficDataTypes::RWM),
         pp("RWR", TrafficDataTypes::RWR),
         pp("RWX", TrafficDataTypes::RWX),
         pp("RXB", TrafficDataTypes::RXB),
         pp("RXC", TrafficDataTypes::RXC),
         pp("RXD", TrafficDataTypes::RXD),
         pp("RXO", TrafficDataTypes::RXO),
         pp("SAB", TrafficDataTypes::SAB),
         pp("SAL", TrafficDataTypes::SAL),
         pp("SAN", TrafficDataTypes::SAN),
         pp("SAO", TrafficDataTypes::SAO),
         pp("SAT", TrafficDataTypes::SAT),
         pp("SCI", TrafficDataTypes::SCI),
         pp("SCN", TrafficDataTypes::SCN),
         pp("SEW", TrafficDataTypes::SEW),
         pp("SEX", TrafficDataTypes::SEX),
         pp("SFB", TrafficDataTypes::SFB),
         pp("SFC", TrafficDataTypes::SFC),
         pp("SFH", TrafficDataTypes::SFH),
         pp("SFL", TrafficDataTypes::SFL),
         pp("SFO", TrafficDataTypes::SFO),
         pp("SHL", TrafficDataTypes::SHL),
         pp("SHX", TrafficDataTypes::SHX),
         pp("SLT", TrafficDataTypes::SLT),
         pp("SLU", TrafficDataTypes::SLU),
         pp("SM",  TrafficDataTypes::SM),
         pp("SMC", TrafficDataTypes::SMC),
         pp("SMG", TrafficDataTypes::SMG),
         pp("SMO", TrafficDataTypes::SMO),
         pp("SMV", TrafficDataTypes::SMV),
         pp("SMX", TrafficDataTypes::SMX),
         pp("SN",  TrafficDataTypes::SN),
         pp("SND", TrafficDataTypes::SND),
         pp("SNF", TrafficDataTypes::SNF),
         pp("SNP", TrafficDataTypes::SNP),
         pp("SNR", TrafficDataTypes::SNR),
         pp("SNS", TrafficDataTypes::SNS),
         pp("SNW", TrafficDataTypes::SNW),
         pp("SNX", TrafficDataTypes::SNX),
         pp("SPC", TrafficDataTypes::SPC),
         pp("SPL", TrafficDataTypes::SPL),
         pp("SPY", TrafficDataTypes::SPY),
         pp("SR",  TrafficDataTypes::SR),
         pp("SRC", TrafficDataTypes::SRC),
         pp("SRO", TrafficDataTypes::SRO),
         pp("SRX", TrafficDataTypes::SRX),
         pp("SSF", TrafficDataTypes::SSF),
         pp("SSM", TrafficDataTypes::SSM),
         pp("SSO", TrafficDataTypes::SSO),
         pp("STD", TrafficDataTypes::STD),
         pp("STF", TrafficDataTypes::STF),
         pp("STI", TrafficDataTypes::STI),
         pp("STM", TrafficDataTypes::STM),
         pp("STU", TrafficDataTypes::STU),
         pp("SUB", TrafficDataTypes::SUB),
         pp("SVH", TrafficDataTypes::SVH),
         pp("SWA", TrafficDataTypes::SWA),
         pp("SWC", TrafficDataTypes::SWC),
         pp("SWH", TrafficDataTypes::SWH),
         pp("SWI", TrafficDataTypes::SWI),
         pp("SWN", TrafficDataTypes::SWN),
         pp("SWS", TrafficDataTypes::SWS),
         pp("SWT", TrafficDataTypes::SWT),
         pp("TAL", TrafficDataTypes::TAL),
         pp("TAX", TrafficDataTypes::TAX),
         pp("TBU", TrafficDataTypes::TBU),
         pp("TCC", TrafficDataTypes::TCC),
         pp("TCN", TrafficDataTypes::TCN),
         pp("TCX", TrafficDataTypes::TCX),
         pp("TDX", TrafficDataTypes::TDX),
         pp("TEA", TrafficDataTypes::TEA),
         pp("TEX", TrafficDataTypes::TEX),
         pp("TFA", TrafficDataTypes::TFA),
         pp("TGL", TrafficDataTypes::TGL),
         pp("TGW", TrafficDataTypes::TGW),
         pp("THU", TrafficDataTypes::THU),
         pp("TIA", TrafficDataTypes::TIA),
         pp("TIR", TrafficDataTypes::TIR),
         pp("TLI", TrafficDataTypes::TLI),
         pp("TLN", TrafficDataTypes::TLN),
         pp("TLO", TrafficDataTypes::TLO),
         pp("TLT", TrafficDataTypes::TLT),
         pp("TLV", TrafficDataTypes::TLV),
         pp("TLX", TrafficDataTypes::TLX),
         pp("TM",  TrafficDataTypes::TM),
         pp("TMO", TrafficDataTypes::TMO),
         pp("TMP", TrafficDataTypes::TMP),
         pp("TNL", TrafficDataTypes::TNL),
         pp("TNW", TrafficDataTypes::TNW),
         pp("TOR", TrafficDataTypes::TOR),
         pp("TOX", TrafficDataTypes::TOX),
         pp("TR",  TrafficDataTypes::TR),
         pp("TRA", TrafficDataTypes::TRA),
         pp("TRC", TrafficDataTypes::TRC),
         pp("TRT", TrafficDataTypes::TRT),
         pp("TRX", TrafficDataTypes::TRX),
         pp("TSC", TrafficDataTypes::TSC),
         pp("TSR", TrafficDataTypes::TSR),
         pp("TSX", TrafficDataTypes::TSX),
         pp("TTB", TrafficDataTypes::TTB),
         pp("TTL", TrafficDataTypes::TTL),
         pp("TTM", TrafficDataTypes::TTM),
         pp("TUB", TrafficDataTypes::TUB),
         pp("TUC", TrafficDataTypes::TUC),
         pp("TVX", TrafficDataTypes::TVX),
         pp("TWI", TrafficDataTypes::TWI),
         pp("TXA", TrafficDataTypes::TXA),
         pp("TXB", TrafficDataTypes::TXB),
         pp("TXC", TrafficDataTypes::TXC),
         pp("TXD", TrafficDataTypes::TXD),
         pp("TXL", TrafficDataTypes::TXL),
         pp("TXN", TrafficDataTypes::TXN),
         pp("TXO", TrafficDataTypes::TXO),
         pp("TXP", TrafficDataTypes::TXP),
         pp("TXR", TrafficDataTypes::TXR),
         pp("TXS", TrafficDataTypes::TXS),
         pp("TXV", TrafficDataTypes::TXV),
         pp("TXW", TrafficDataTypes::TXW),
         pp("TXX", TrafficDataTypes::TXX),
         pp("TXY", TrafficDataTypes::TXY),
         pp("TXZ", TrafficDataTypes::TXZ),
         pp("UBA", TrafficDataTypes::UBA),
         pp("UBV", TrafficDataTypes::UBV),
         pp("UCA", TrafficDataTypes::UCA),
         pp("UGI", TrafficDataTypes::UGI),
         pp("UHA", TrafficDataTypes::UHA),
         pp("UHV", TrafficDataTypes::UHV),
         pp("USI", TrafficDataTypes::USI),
         pp("USN", TrafficDataTypes::USN),
         pp("VFR", TrafficDataTypes::VFR),
         pp("VIR", TrafficDataTypes::VIR),
         pp("VNW", TrafficDataTypes::VNW),
         pp("VOD", TrafficDataTypes::VOD),
         pp("VSA", TrafficDataTypes::VSA),
         pp("VSM", TrafficDataTypes::VSM),
         pp("VSX", TrafficDataTypes::VSX),
         pp("VWC", TrafficDataTypes::VWC),
         pp("VWI", TrafficDataTypes::VWI),
         pp("VWN", TrafficDataTypes::VWN),
         pp("VWX", TrafficDataTypes::VWX),
         pp("WBC", TrafficDataTypes::WBC),
         pp("WBS", TrafficDataTypes::WBS),
         pp("WHI", TrafficDataTypes::WHI),
         pp("WIC", TrafficDataTypes::WIC),
         pp("WIG", TrafficDataTypes::WIG),
         pp("WIS", TrafficDataTypes::WIS),
         pp("WIX", TrafficDataTypes::WIX),
         pp("WLD", TrafficDataTypes::WLD),
         pp("WLL", TrafficDataTypes::WLL),
         pp("WLT", TrafficDataTypes::WLT),
         pp("WMW", TrafficDataTypes::WMW),
         pp("WR",  TrafficDataTypes::WR),
         pp("WRM", TrafficDataTypes::WRM),
         pp("WST", TrafficDataTypes::WST),
         pp("WSX", TrafficDataTypes::WSX),
         pp("WSZ", TrafficDataTypes::WSZ),
         pp("NoPhrase", TrafficDataTypes::NoPhrase),
#endif
      };
      c_phraseMap.insert(phrase_map, 
                         phrase_map + sizeof(phrase_map)/sizeof(*phrase_map));
   }

   // Translates from phrase to severity
   {
      typedef map<TrafficDataTypes::phrase, 
         TrafficDataTypes::severity>::value_type ps;
      const ps phrase_severity_map[] = {
#if 1
         // Accidents, set to Severe
         ps( TrafficDataTypes::ACA, TrafficDataTypes::QueuingTraffic ), // Earlier accident
         ps( TrafficDataTypes::ACB, TrafficDataTypes::TrafficCongestion ), // Acc with bus
         ps( TrafficDataTypes::ACD, TrafficDataTypes::StationaryTraffic ), // Secondary accident
         ps( TrafficDataTypes::ACE, TrafficDataTypes::QueuingTraffic ),  // Chem spill
         ps( TrafficDataTypes::ACF, TrafficDataTypes::TrafficCongestion ),  // Fuel spill
         ps( TrafficDataTypes::ACH, TrafficDataTypes::TrafficCongestion ),  // Lorry acc
         ps( TrafficDataTypes::ACI, TrafficDataTypes::TrafficCongestion ), // Accident
         ps( TrafficDataTypes::ACL, TrafficDataTypes::QueuingTraffic ), // Accident clearance
         ps( TrafficDataTypes::ACM, TrafficDataTypes::QueuingTraffic ), // Multi vehicle
         ps( TrafficDataTypes::ACS, TrafficDataTypes::StationaryTraffic ),  // Serious acc
         ps( TrafficDataTypes::ACZ, TrafficDataTypes::Closed ), // Hazzardous material
         ps( TrafficDataTypes::AJA, TrafficDataTypes::QueuingTraffic ),  // Jack-knifed lorry
         ps( TrafficDataTypes::AJC, TrafficDataTypes::QueuingTraffic ),// Jack-knifed caravan
         ps( TrafficDataTypes::AJT, TrafficDataTypes::QueuingTraffic ),// Jack-knifed trailer
         ps( TrafficDataTypes::AOI, TrafficDataTypes::QueuingTraffic ), // Oil spill
         ps( TrafficDataTypes::AOL, TrafficDataTypes::QueuingTraffic ),  // Overturned lorru
         ps( TrafficDataTypes::AOV, TrafficDataTypes::QueuingTraffic ),// Overturned vehicle
         ps( TrafficDataTypes::ASP, TrafficDataTypes::QueuingTraffic ), // Spun vehicle

         // Different queue types
         ps( TrafficDataTypes::LS1, TrafficDataTypes::StationaryTraffic ), 
         ps( TrafficDataTypes::LS2, TrafficDataTypes::QueuingTraffic ),
         ps( TrafficDataTypes::LS3, TrafficDataTypes::SlowTraffic ),
         ps( TrafficDataTypes::LS4, TrafficDataTypes::HeavyTraffic ),
         ps( TrafficDataTypes::LS5, TrafficDataTypes::TrafficFlowingFreely ), 
         ps( TrafficDataTypes::LS6, TrafficDataTypes::LongQueues ),  
         ps( TrafficDataTypes::LTH, TrafficDataTypes::TrafficHeavierThanNormal ),
         ps( TrafficDataTypes::LTM, TrafficDataTypes::TrafficVeryMuchHeavierThanNormal ), 
         ps( TrafficDataTypes::TBU, TrafficDataTypes::TrafficBuildingUp ), 
         ps( TrafficDataTypes::TEA, TrafficDataTypes::TrafficEasing ), 
         ps( TrafficDataTypes::TCN, TrafficDataTypes::TrafficCongestion ), 
         ps( TrafficDataTypes::TLN, TrafficDataTypes::TrafficLighterThanNormal ),

         // Closed or blocked roads, set to closed or blocked
         ps( TrafficDataTypes::BRB, TrafficDataTypes::Blocked ),
         ps( TrafficDataTypes::BRC, TrafficDataTypes::Closed ),
         ps( TrafficDataTypes::CPW, TrafficDataTypes::Closed ),
         ps( TrafficDataTypes::RBA, TrafficDataTypes::Blocked ),
         ps( TrafficDataTypes::RBE, TrafficDataTypes::Blocked ),
         ps( TrafficDataTypes::RBX, TrafficDataTypes::Blocked ),
         ps( TrafficDataTypes::RCA, TrafficDataTypes::Closed ),
         ps( TrafficDataTypes::RCB, TrafficDataTypes::Blocked ),
         ps( TrafficDataTypes::RCD, TrafficDataTypes::Closed ),
         ps( TrafficDataTypes::RCE, TrafficDataTypes::Closed ),
         ps( TrafficDataTypes::RIN, TrafficDataTypes::Closed ),
         ps( TrafficDataTypes::RMP, TrafficDataTypes::Closed ),

         // Road work and maintenance
         ps( TrafficDataTypes::RCW, TrafficDataTypes::MiscRoadworks ),
         ps( TrafficDataTypes::RMK, TrafficDataTypes::MiscRoadworks ),
         ps( TrafficDataTypes::RWK, TrafficDataTypes::MiscRoadworks ),
         ps( TrafficDataTypes::RWL, TrafficDataTypes::MiscRoadworks ),
         ps( TrafficDataTypes::RWM, TrafficDataTypes::MiscRoadworks ),

         // Others
         ps( TrafficDataTypes::CTR, TrafficDataTypes::AlternatingContraflow ),
#endif 
      };
      const size_t ps_size = 
         sizeof(phrase_severity_map)/sizeof(*phrase_severity_map);
      c_phraseToSeverity.insert( phrase_severity_map, 
                                 phrase_severity_map + ps_size );
   }

   {
      typedef std::pair<const char*, TrafficDataTypes::disturbanceType> dm;
      const dm type_map[] = { 
#if 1
         dm( "ACC", TrafficDataTypes::Accident ),
         dm( "ACT", TrafficDataTypes::Activities ),
         dm( "SIG", TrafficDataTypes::TrafficSignalPlans ),
         dm( "SNE", TrafficDataTypes::SnowIceEquipment ),
         dm( "SNO", TrafficDataTypes::SnowOnTheRoad ),
         dm( "TTM", TrafficDataTypes::TravelTime ),
         dm( "WDA", TrafficDataTypes::WeatherData ),
         dm( "WIN", TrafficDataTypes::Wind ),
         dm( "APL", TrafficDataTypes::ActionPlan ),
         dm( "AVS", TrafficDataTypes::AverageSpeed ),
         dm( "CTT", TrafficDataTypes::Concentration ),
         dm( "DEC", TrafficDataTypes::DelaysCancellations ),
         dm( "EQU", TrafficDataTypes::TrafficEquipmentStatus ),
         dm( "EXH", TrafficDataTypes::ExhaustPollution ),
         dm( "FER", TrafficDataTypes::FerriesTrains ),
         dm( "FLO", TrafficDataTypes::Flow ),
         dm( "FOS", TrafficDataTypes::FogSmokeDust ),
         dm( "INC", TrafficDataTypes::Incident ),
         dm( "INF", TrafficDataTypes::ServiceInformation ),
         dm( "IVD", TrafficDataTypes::IndividualVehicleData ),
         dm( "LOS", TrafficDataTypes::LevelOfService ),
         dm( "MHZ", TrafficDataTypes::MovingHazards ),
         dm( "OCC", TrafficDataTypes::Occupancy ),
         dm( "ODM", TrafficDataTypes::OriginDestinationMatrix ),
         dm( "OHZ", TrafficDataTypes::ObstructionHazards ),
         dm( "OPA", TrafficDataTypes::OperatorActions ),
         dm( "PAR", TrafficDataTypes::Carparks ),
         dm( "PRE", TrafficDataTypes::Precipitation ),
         dm( "RES", TrafficDataTypes::TrafficRestrictions ),
         dm( "RMT", TrafficDataTypes::RoadWorks ),
         dm( "ROU", TrafficDataTypes::Rerouting ),
         dm( "SHZ", TrafficDataTypes::SkidHazards ),
         dm( "NotUsed", TrafficDataTypes::Other ),
         dm( "NotUsed", TrafficDataTypes::Camera ),
         dm( "NotUsed", TrafficDataTypes::Police ),
         dm( "NotUsed", TrafficDataTypes::SpeedTrap ),
         dm( "NotUsed", TrafficDataTypes::NoType ),
         dm( "NotUsed", TrafficDataTypes::BlackPoint ),
#endif
      };
      c_typeMap.insert( type_map, 
                        type_map + sizeof(type_map)/sizeof(*type_map) );
   }

   return true;
}

bool
DatexUtils::c_initialized = initializeTables();
